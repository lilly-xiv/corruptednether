plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
	//maven { url "https://jitpack.io" }
	maven { url "https://cursemaven.com/" }
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://maven.terraformersmc.com/" } // Biolith + ModMenu (Cinderscapes)
	maven { url "https://maven.minecraftforge.net/" } // Terrablender
	maven { url "https://maven.shedaniel.me" } // ClothConfig (Cinderscapes)
	maven { url "https://maven.kyrptonaught.dev" } // Deeper & Darker
	maven { url "https://maven.wispforest.io" } // OwO-Lib (Deeper & Darker)
	maven { url "https://maven.ladysnake.org/releases" } // Trinkets, Cardinal Components (Desolation)
	maven { url "https://raw.githubusercontent.com/Fuzss/modresources/main/maven"} // Fuzs stuff
}

loom {
	runs {
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=corruptednether"

			runDir "build/datagen"
		}
	}
	accessWidenerPath = file("src/main/resources/corruptednether.accesswidener")
	splitEnvironmentSourceSets()

	mods {
		"corrupted-nether" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modApi "com.terraformersmc:biolith-fabric:3.0.0-alpha.1"
	modApi "com.terraformersmc:modmenu:11.0.1"
	modApi "com.terraformersmc.terraform-api:terraform-biome-remapper-api-v1:11.0.0-alpha.1"
	modApi "com.terraformersmc.terraform-api:terraform-shapes-api-v1:11.0.0-alpha.1"
	modApi "com.terraformersmc.terraform-api:terraform-wood-api-v1:11.0.0-alpha.1"
	include "com.terraformersmc.terraform-api:terraform-wood-api-v1:11.0.0-alpha.1"
	modApi "me.shedaniel.cloth:cloth-config-fabric:15.0.127"

}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}